function state_1 = streaming( x, y, b, top_k, para_C, len, pointer, alg1_path, K )
% 
% clc;
% clear;
% x = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1
%     0,0,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,0,1,0,0,0,0,1,1,0,1,0,1,1
%     1,1,0,1,0,1,0,1,1,0,0,0,1,1,0,0,0,1,1,1,0,1,1,0,1,1,0,1,1,0,1,1,1
%     1,0,0,0,0,0,0,0,0,1,1,1,0,0,0,0,0,0,0,0,1,1,0,0,1,1,1,0,1,0,1,1,0
%     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% x = [1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
%     1,1,1,1,1,1,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,1,1,0,0,0,0,0
%     1,1,1,1,1,1,1,1,1,1,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0
%     1,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,0,0,0,0,0
%     0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0];
% x = [1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1
%     -1,-1,1,1,1,1,-1,-1,-1,-1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,-1,1,-1,-1,-1,-1,1,1,-1,1,-1,1,1
%     1,1,-1,1,-1,1,-1,1,1,-1,-1,-1,1,1,-1,-1,-1,1,1,1,-1,1,1,-1,1,1,-1,1,1,-1,1,1,1
%     1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,1,-1,-1,-1,-1,-1,-1,-1,-1,1,1,-1,-1,1,1,1,-1,1,-1,1,1,-1
%     -1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1,-1];
% 
% 
% y=[1,1,1,-1,-1];
% 
% b=[-1,-1,-1,-1,-1];
[x_row, x_column] = size(x);
len = floor(len * x_column);
top_k = floor(top_k * len);
featureSet = [];
fid = fopen(alg1_path, 'w+');

while pointer < x_column
    if (pointer+len-1) < x_column
        alpha = get_alpha(featureSet, y, b, para_C); %calculate \alpha
        new_x = next_choosed_column(x,pointer,len-1);        
        candidateSet = [featureSet,new_x];
        [featureSet,top_k_loc] = find_top_k(candidateSet, y, alpha, top_k); % calculate score(W) and select top_k columns    
        [accuracy, Precision, Recall, F_score, variance] = getAccuracy(featureSet, y, K);
        fprintf(fid, '%g\t', accuracy);
        fprintf(fid, '%g\t', Precision);
        fprintf(fid, '%g\t', Recall);
        fprintf(fid, '%g\t', F_score);
        fprintf(fid, '%g\r\n', variance);
    end
    pointer=pointer+len;
end

state_1 = '=================SSF DONE!================='

end
